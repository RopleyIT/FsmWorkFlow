@using FsmWorkFlowUI
@using FsmWorkFlowUI.Components
@using FsmWorkFlowUI.Data
@using FsmWorkFlowUI.Pages
@namespace FsmBlazorTests
<FsmWorkFlow Model="@testModel" @ref=fsmWorkFlow ErrDialog="Unexpected Error">
    <FsmStep Name="FirstStep" Status="@FirstStepStatus">
        <FsmEvent On="ToStep2"
                  When="@(()=>FromStep1Guard??false)"
                  Do="@FromStep1Action"
                  Then="SecondStep" />
        <FsmEvent On="StayInStep1" 
                  Do="@FromStep1Action"
                  Then="FirstStep" />
        <FsmEvent On="GuardException"
                  When="@ThrowingGuard" />
        <FsmEvent On="ToDialogStep"
                  Then="Dialog step" />
        <FsmStepBody><p>In step 1</p></FsmStepBody>
    </FsmStep>
    <FsmStep Name="SecondStep" Status="@SecondStepStatus">
        <FsmEvent On="ToStep1" 
                  Do="@FromStep2Action"
                  Then="FirstStep" />
        <FsmEvent On="StayInStep2"
                  When=@(()=>FromStep2Guard??false)
                  Do="@FromStep2Action"
                  Then="SecondStep" />
        <FsmEvent On="ActionException"
                  Do="@ThrowingAction" />
        <FsmEvent On="ToDialogStep"
                  Then="Dialog step" />
        <FsmStepBody><p>In step 2</p></FsmStepBody>
    </FsmStep>
    <FsmDialog Name="Dialog step" OkText="OK" OnOk="ToStep2"
               OtherText="Other" OnOther="ToStep1" >
        <p>In dialog step</p>
    </FsmDialog>
    <FsmDialog Name="Unexpected Error" OkText="OK" OnOk="ToStep2"
               OtherText="Other" OnOther="ToStep1">
        <p>In unexpected error dialog</p>
    </FsmDialog>
</FsmWorkFlow>

@code
{
    [Parameter]
    public string? testModel { get; set; }
    [Parameter]
    public FsmStepStatus FirstStepStatus { get; set; }
    [Parameter]
    public FsmStepStatus SecondStepStatus { get; set; }
    [Parameter]
    public bool? FromStep1Guard { get; set; }
    [Parameter]
    public bool? FromStep2Guard { get; set; }

    public FsmWorkFlow? fsmWorkFlow { get; set; }
    bool ThrowingGuard() { throw new Exception("Guard exception"); }
    void FromStep1Action() { testModel += " From Step 1"; }
    void FromStep2Action() { testModel += " From Step 2"; }
    void ThrowingAction() { throw new Exception("Action exception"); }
}