@using FsmWorkFlowUI.Components
@using FsmWorkFlowUI.Data
@inject IAuthService authService

@page "/"
<h3>Simple Login Example</h3>
<p>
    This page sets up the simple login workflow as
    described in the README.md documentation file.
</p>
<FsmWorkFlow Model="@model" @ref=workFlow>
    <FsmStep Name="Please login" Status="@UserNameStatus()">
        <FsmEvent On="Login" When="@UserNameTyped" Then="Password?" />
        <FsmEvent On="Login" Do="@NeedAUserName" />
        <FsmStepBody>
            <p>Please type your login name</p>
            <EditForm Model="@model" OnSubmit=@ToPasswordStep>
                <div class="form-group">
                    <label for="username">Login name</label>
                    <InputText @bind-Value="model.UserName" id="username" />
                </div>
                <input type="submit" class="btn btn-primary" value="Next" />
            </EditForm>
            <p style="color:red;">@error</p>
        </FsmStepBody>
    </FsmStep>
    <FsmStep Name="Password?" Status="@PasswordStatus()">
        <FsmEvent On="Login" When="@PasswordValid" Do="@IssueAuthToken" Then="Logged in options" />
        <FsmEvent On="Login" Do="@ShowLoginError" Then="Bad credentials" />
        <FsmStepBody>
            <LoginPassword WorkFlow="@workFlow" @bind-Pass="@model.Password" />
        </FsmStepBody>
    </FsmStep>
    <FsmStep Hidden=true Name="Bad credentials">
        <FsmEvent On="Logout" Do="@RescindToken" Then="Please login" />
        <FsmStepBody>
            <DlgModal Show=true OkText="OK" 
                OnOk=@(()=>workFlow?.Fire("$back"))
                OnCancel=@(()=>workFlow?.Fire("Logout"))>
                <p>Your user name or password were not valid</p>
            </DlgModal>
        </FsmStepBody>
    </FsmStep>
    <FsmStep Name="Logged in options" Status="@LoggedInStatus()">
        <FsmEvent On="Logout" Do="@RescindToken" Then="Please login" />
        <FsmStepBody>
            <p>Congratulations! you are logged in. The world is your oyster! 
                When you are finished, click the button below to log out.</p>
            <button class="btn btn-primary" @onclick=@(()=>workFlow?.Fire("Logout"))>Log out</button>
        </FsmStepBody>
    </FsmStep>
</FsmWorkFlow>
<h3>&nbsp;</h3>
<h3>Modal dialog demo</h3>
<button class="btn btn-primary" @onclick="() => dlgModal.Show = true">Click me!</button>

<DlgModal @ref="@dlgModal" Title="Login error" OkText="OK" CancelText="">
    <div class="row">
        <p>Your login credentials were rubbish. Try again.</p>
    </div>
</DlgModal>

@code {
    // Variables used in the markup
    DlgModal? dlgModal { get; set; }
    LoginModel? model;
    FsmWorkFlow? workFlow;
    string error = string.Empty;
    protected override void OnInitialized()
    {
        model = authService.CreateLoginModel();
    }

    // Transition functions
    void ToPasswordStep() => workFlow?.Fire("Login");

    // Guard functions
    bool PasswordValid() => authService.PasswordValid(model?.UserName, model?.Password);
    bool UserNameTyped() => !string.IsNullOrWhiteSpace(model?.UserName);

    // Action functions
    void IssueAuthToken() { model.AuthToken = authService.IssueKey(model?.UserName, model?.Password); }
    void ShowLoginError() 
    { 
        error = "Name or password invalid";
    }

    void NeedAUserName() { error = "Please provide a valid user name"; }
    void RescindToken() { model = authService.CreateLoginModel(); error = string.Empty; }

    // Status functions
    FsmStepStatus UserNameStatus() => UserNameTyped() ? FsmStepStatus.Done : FsmStepStatus.InProgress;
    FsmStepStatus PasswordStatus() => PasswordValid() ? FsmStepStatus.Done : FsmStepStatus.InProgress;
    FsmStepStatus LoggedInStatus() => model.AuthToken != 0 ? FsmStepStatus.Done : FsmStepStatus.Blocked;
}
